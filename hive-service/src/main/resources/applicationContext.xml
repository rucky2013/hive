<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd   
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	   "
	>
    <!-- 自动扫描-->
    <context:component-scan base-package="com.hive">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <context:property-placeholder location="classpath:config/*.properties"/>
    
	<!-- mybatis引入 -->
	<import resource="applicationContext-mybatis.xml"/>
	<!-- redis引入 -->
	<import resource="redis-content.xml"/>
	<!-- dubbo引入 -->
	<import resource="applicationContext-dubbo.xml"/>
	<!-- 下面是配置声明式事务管理的，个人感觉比用注解管理事务要简单方便 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 拦截器方式配置事物 -->
	<!-- REQUIRED: 如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。这是 最常见的选择 -->
	<!-- SUPPORTS: 支持当前事务，如果当前没有事务，就以非事务方式执行 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* com.hive.provider..*Impl.*(..))" id="txPointcut"/>
	    <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
	</aop:config>
	<!-- 整个表达式可以分为五个部分：
	 1、execution(): 表达式主体。
	 2、第一个*号：表示返回类型，*号表示所有的类型。
	 3、包名：表示需要拦截的包名，后面的两个句点表示当前包和当前包的所有子包，com.sample.service.impl包、子孙包下所有类的方法。
	 4、第二个*号：表示类名，*号表示所有的类。
	 5、*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数。 -->
	 
 	 
 </beans>
